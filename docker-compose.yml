services:
  db-service:
    build:
      context: .
      dockerfile: cmd/db/Dockerfile
    container_name: db-service
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"    
    environment:
      - GRPC_PORT
      - REDIS_ADDR
      - DB_HOST
      - DB_PORT
      - DB_USER
      - DB_PASSWORD
      - DB_NAME
      - DB_SSL_MODE
    depends_on:
      - postgres
      - redis


  api-service:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    container_name: api-service
    ports:
      - "${TODO_PORT}:${TODO_PORT}" 
    environment:
      - DB_SERVICE_ADDRESS=db-service:${GRPC_PORT} 
      - TODO_PORT
    depends_on:
      - db-service
      - redis

  api-service2:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    container_name: api-service2
    ports:
      - "7541:${TODO_PORT}" 
    environment:
      - DB_SERVICE_ADDRESS=db-service:${GRPC_PORT} 
      - TODO_PORT
    depends_on:
      - db-service
      - redis


  api-service3:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    container_name: api-service3
    ports:
      - "7542:${TODO_PORT}" 
    environment:
      - DB_SERVICE_ADDRESS=db-service:${GRPC_PORT} 
      - TODO_PORT
    depends_on:
      - db-service
      - redis

  redis:
    image: redis:7-alpine
    container_name: my-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
  
  postgres:
    image: postgres:15-alpine
    container_name: my-postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  redis_data:
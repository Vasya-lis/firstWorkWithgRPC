// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0--rc2
// source: task.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Comment       string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Repeat        string                 `protobuf:"bytes,5,opt,name=repeat,proto3" json:"repeat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Task) GetRepeat() string {
	if x != nil {
		return x.Repeat
	}
	return ""
}

type ListTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Search        string                 `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{1}
}

func (x *ListTasksRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTasksRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type ListTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_task_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{2}
}

func (x *ListTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	mi := &file_task_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	mi := &file_task_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type IDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IDRequest) Reset() {
	*x = IDRequest{}
	mi := &file_task_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDRequest) ProtoMessage() {}

func (x *IDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDRequest.ProtoReflect.Descriptor instead.
func (*IDRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{5}
}

func (x *IDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NextDateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentDate   string                 `protobuf:"bytes,1,opt,name=current_date,json=currentDate,proto3" json:"current_date,omitempty"`
	TaskDate      string                 `protobuf:"bytes,2,opt,name=task_date,json=taskDate,proto3" json:"task_date,omitempty"`
	RepeatRule    string                 `protobuf:"bytes,3,opt,name=repeat_rule,json=repeatRule,proto3" json:"repeat_rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextDateRequest) Reset() {
	*x = NextDateRequest{}
	mi := &file_task_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextDateRequest) ProtoMessage() {}

func (x *NextDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextDateRequest.ProtoReflect.Descriptor instead.
func (*NextDateRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{6}
}

func (x *NextDateRequest) GetCurrentDate() string {
	if x != nil {
		return x.CurrentDate
	}
	return ""
}

func (x *NextDateRequest) GetTaskDate() string {
	if x != nil {
		return x.TaskDate
	}
	return ""
}

func (x *NextDateRequest) GetRepeatRule() string {
	if x != nil {
		return x.RepeatRule
	}
	return ""
}

type NextDateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NextDate      string                 `protobuf:"bytes,1,opt,name=next_date,json=nextDate,proto3" json:"next_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextDateResponse) Reset() {
	*x = NextDateResponse{}
	mi := &file_task_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextDateResponse) ProtoMessage() {}

func (x *NextDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextDateResponse.ProtoReflect.Descriptor instead.
func (*NextDateResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{7}
}

func (x *NextDateResponse) GetNextDate() string {
	if x != nil {
		return x.NextDate
	}
	return ""
}

type AddTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTaskResponse) Reset() {
	*x = AddTaskResponse{}
	mi := &file_task_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskResponse) ProtoMessage() {}

func (x *AddTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskResponse.ProtoReflect.Descriptor instead.
func (*AddTaskResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{8}
}

func (x *AddTaskResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateDateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NextDate      string                 `protobuf:"bytes,2,opt,name=next_date,json=nextDate,proto3" json:"next_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDateRequest) Reset() {
	*x = UpdateDateRequest{}
	mi := &file_task_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDateRequest) ProtoMessage() {}

func (x *UpdateDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDateRequest.ProtoReflect.Descriptor instead.
func (*UpdateDateRequest) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateDateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDateRequest) GetNextDate() string {
	if x != nil {
		return x.NextDate
	}
	return ""
}

type EmptyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_task_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{10}
}

var File_task_proto protoreflect.FileDescriptor

const file_task_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"task.proto\x12\tscheduler\"r\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04date\x18\x02 \x01(\tR\x04date\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acomment\x18\x04 \x01(\tR\acomment\x12\x16\n" +
	"\x06repeat\x18\x05 \x01(\tR\x06repeat\"@\n" +
	"\x10ListTasksRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06search\x18\x02 \x01(\tR\x06search\":\n" +
	"\x11ListTasksResponse\x12%\n" +
	"\x05tasks\x18\x01 \x03(\v2\x0f.scheduler.TaskR\x05tasks\"6\n" +
	"\x0fGetTaskResponse\x12#\n" +
	"\x04task\x18\x01 \x01(\v2\x0f.scheduler.TaskR\x04task\"8\n" +
	"\x11UpdateTaskRequest\x12#\n" +
	"\x04task\x18\x01 \x01(\v2\x0f.scheduler.TaskR\x04task\"\x1b\n" +
	"\tIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"r\n" +
	"\x0fNextDateRequest\x12!\n" +
	"\fcurrent_date\x18\x01 \x01(\tR\vcurrentDate\x12\x1b\n" +
	"\ttask_date\x18\x02 \x01(\tR\btaskDate\x12\x1f\n" +
	"\vrepeat_rule\x18\x03 \x01(\tR\n" +
	"repeatRule\"/\n" +
	"\x10NextDateResponse\x12\x1b\n" +
	"\tnext_date\x18\x01 \x01(\tR\bnextDate\"!\n" +
	"\x0fAddTaskResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"@\n" +
	"\x11UpdateDateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1b\n" +
	"\tnext_date\x18\x02 \x01(\tR\bnextDate\"\x0f\n" +
	"\rEmptyResponse2\x9a\x04\n" +
	"\x10SchedulerService\x12F\n" +
	"\tListTasks\x12\x1b.scheduler.ListTasksRequest\x1a\x1c.scheduler.ListTasksResponse\x12;\n" +
	"\aGetTask\x12\x14.scheduler.IDRequest\x1a\x1a.scheduler.GetTaskResponse\x12D\n" +
	"\n" +
	"UpdateTask\x12\x1c.scheduler.UpdateTaskRequest\x1a\x18.scheduler.EmptyResponse\x12<\n" +
	"\n" +
	"DeleteTask\x12\x14.scheduler.IDRequest\x1a\x18.scheduler.EmptyResponse\x12:\n" +
	"\bDoneTask\x12\x14.scheduler.IDRequest\x1a\x18.scheduler.EmptyResponse\x12C\n" +
	"\bNextDate\x12\x1a.scheduler.NextDateRequest\x1a\x1b.scheduler.NextDateResponse\x126\n" +
	"\aAddTask\x12\x0f.scheduler.Task\x1a\x1a.scheduler.AddTaskResponse\x12D\n" +
	"\n" +
	"UpdateDate\x12\x1c.scheduler.UpdateDateRequest\x1a\x18.scheduler.EmptyResponseB\bZ\x06/protob\x06proto3"

var (
	file_task_proto_rawDescOnce sync.Once
	file_task_proto_rawDescData []byte
)

func file_task_proto_rawDescGZIP() []byte {
	file_task_proto_rawDescOnce.Do(func() {
		file_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_proto_rawDesc), len(file_task_proto_rawDesc)))
	})
	return file_task_proto_rawDescData
}

var file_task_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_task_proto_goTypes = []any{
	(*Task)(nil),              // 0: scheduler.Task
	(*ListTasksRequest)(nil),  // 1: scheduler.ListTasksRequest
	(*ListTasksResponse)(nil), // 2: scheduler.ListTasksResponse
	(*GetTaskResponse)(nil),   // 3: scheduler.GetTaskResponse
	(*UpdateTaskRequest)(nil), // 4: scheduler.UpdateTaskRequest
	(*IDRequest)(nil),         // 5: scheduler.IDRequest
	(*NextDateRequest)(nil),   // 6: scheduler.NextDateRequest
	(*NextDateResponse)(nil),  // 7: scheduler.NextDateResponse
	(*AddTaskResponse)(nil),   // 8: scheduler.AddTaskResponse
	(*UpdateDateRequest)(nil), // 9: scheduler.UpdateDateRequest
	(*EmptyResponse)(nil),     // 10: scheduler.EmptyResponse
}
var file_task_proto_depIdxs = []int32{
	0,  // 0: scheduler.ListTasksResponse.tasks:type_name -> scheduler.Task
	0,  // 1: scheduler.GetTaskResponse.task:type_name -> scheduler.Task
	0,  // 2: scheduler.UpdateTaskRequest.task:type_name -> scheduler.Task
	1,  // 3: scheduler.SchedulerService.ListTasks:input_type -> scheduler.ListTasksRequest
	5,  // 4: scheduler.SchedulerService.GetTask:input_type -> scheduler.IDRequest
	4,  // 5: scheduler.SchedulerService.UpdateTask:input_type -> scheduler.UpdateTaskRequest
	5,  // 6: scheduler.SchedulerService.DeleteTask:input_type -> scheduler.IDRequest
	5,  // 7: scheduler.SchedulerService.DoneTask:input_type -> scheduler.IDRequest
	6,  // 8: scheduler.SchedulerService.NextDate:input_type -> scheduler.NextDateRequest
	0,  // 9: scheduler.SchedulerService.AddTask:input_type -> scheduler.Task
	9,  // 10: scheduler.SchedulerService.UpdateDate:input_type -> scheduler.UpdateDateRequest
	2,  // 11: scheduler.SchedulerService.ListTasks:output_type -> scheduler.ListTasksResponse
	3,  // 12: scheduler.SchedulerService.GetTask:output_type -> scheduler.GetTaskResponse
	10, // 13: scheduler.SchedulerService.UpdateTask:output_type -> scheduler.EmptyResponse
	10, // 14: scheduler.SchedulerService.DeleteTask:output_type -> scheduler.EmptyResponse
	10, // 15: scheduler.SchedulerService.DoneTask:output_type -> scheduler.EmptyResponse
	7,  // 16: scheduler.SchedulerService.NextDate:output_type -> scheduler.NextDateResponse
	8,  // 17: scheduler.SchedulerService.AddTask:output_type -> scheduler.AddTaskResponse
	10, // 18: scheduler.SchedulerService.UpdateDate:output_type -> scheduler.EmptyResponse
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_task_proto_init() }
func file_task_proto_init() {
	if File_task_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_proto_rawDesc), len(file_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_task_proto_goTypes,
		DependencyIndexes: file_task_proto_depIdxs,
		MessageInfos:      file_task_proto_msgTypes,
	}.Build()
	File_task_proto = out.File
	file_task_proto_goTypes = nil
	file_task_proto_depIdxs = nil
}
